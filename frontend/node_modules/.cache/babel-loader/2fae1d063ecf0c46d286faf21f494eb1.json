{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); // Стейты для карточек\n\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]); // Стейт для данных пользователя\n\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()]).then(_ref => {\n      let [data, res] = _ref;\n      setCurrentUser(data);\n      setCards(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); // useEffect(() => {\n  //   api.getProfile()\n  //     .then((data) => {\n  //       setCurrentUser(data)\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     })\n  //   api.getInitialCards()\n  //     .then((res) => setCards(res))\n  //     .catch((err) => {\n  //       console.error(err);\n  //     })\n  // }, []);\n  // Открытие попапа редактирования аватара\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // Открытие попапа редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } // Открытие попапа добавления места\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } // Закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  } // Обработчик клика по изображению\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads(updatedCards) {\n    setCards(updatedCards);\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data).then(newProfile => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  } //Функция постановки лайков\n\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } //Функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onSetCards: handleSetCads,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser // onSubmit={handleUpdateUser}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar // onSubmit={handleUpdateAvatar}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit // onSubmit={handleAddPlaceSubmit}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: isSelectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4ezcqCygOkUwhzSQhe1wP0o0qXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","useContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isSelectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","Promise","all","getProfile","getInitialCards","then","data","res","catch","err","console","error","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleSetCads","updatedCards","handleUpdateUser","editProfile","newProfile","handleUpdateAvatar","avatar","updateAvatar","handleAddPlaceSubmit","name","link","addCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","item","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect, useContext} from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  \n  // Стейты для карточек\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()])\n    .then(([data, res]) => {\n      setCurrentUser(data);\n      setCards(res);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }, []);\n\n\n  // useEffect(() => {\n  //   api.getProfile()\n  //     .then((data) => {\n  //       setCurrentUser(data)\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     })\n \n  //   api.getInitialCards()\n  //     .then((res) => setCards(res))\n  //     .catch((err) => {\n  //       console.error(err);\n  //     })\n\n  // }, []);\n\n  // Открытие попапа редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  // Открытие попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  // Открытие попапа добавления места\n  function  handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  \n  // Закрытие попапа\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  // Обработчик клика по изображению\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads (updatedCards) {\n    setCards(updatedCards)\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data)\n    .then((newProfile) => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar)\n    .then(() => {\n      setCurrentUser({ ...currentUser, avatar });\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit({name, link}) {\n    api.addCard({name, link})\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n  \n  //Функция постановки лайков\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((item) => item !== card))\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n  }\n\n  \n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"content\">\n            <Header />\n            <Main \n              onEditAvatar={handleEditAvatarClick} \n              onEditProfile={handleEditProfileClick} \n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onSetCards={handleSetCads}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n            />\n            <Footer />\n            \n            <EditProfilePopup \n              isOpen={isEditProfilePopupOpen} \n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              // onSubmit={handleUpdateUser}\n            />\n\n            <EditAvatarPopup \n              isOpen={isEditAvatarPopupOpen} \n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              // onSubmit={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup \n              isOpen={isAddPlacePopupOpen} \n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n              // onSubmit={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup\n              card={isSelectedCard}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </div>\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}