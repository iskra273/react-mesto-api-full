{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; //добавить пропс onCardLike для компонента Card и задать в него эту функцию. \n//Также добавьте в Card обработчик клика handleLikeClick и вызовите из него onCardLike с аргументом card — по аналогии с уже имеющимся обработчиком handleClick.\n//добавьте пропс onCardDelete и обработчик handleDeleteClick в Card\n//После запроса в API, обновите стейт cards с помощью метода filter: создайте копию массива, исключив из него удалённую карточку.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  //Подписка на контекст\n  const currentUser = useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки (должна ли в текущей карточке показываться иконка удаления)\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : ''}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-template\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"element__delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"element__image\",\n          src: props.link,\n          alt: props.name,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"element__name\",\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"element__like-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"element__like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"element__like-count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, props._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/Card.js"],"names":["React","useState","useEffect","useContext","CurrentUserContext","Card","props","currentUser","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","link","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAASC,kBAAT,QAAmC,gCAAnC,C,CAGA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB;AACA,QAAMC,WAAW,GAAGJ,UAAU,CAACC,kBAAD,CAA9B,CAFmB,CAInB;;AACA,QAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C,CALmB,CAMnB;;AACA,QAAMC,yBAAyB,GAC5B,mBAAkBJ,KAAK,GAAG,yBAAH,GAA+B,wBAAyB,EADlF,CAPmB,CAWnB;;AACA,QAAMK,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUJ,WAAW,CAACI,GAA3C,CAAhB,CAZmB,CAanB;;AACA,QAAMM,uBAAuB,GAC1B,iBAAgBJ,OAAO,GAAG,sBAAH,GAA4B,EAAG,EADzD;;AAIA,WAASK,WAAT,GAAuB;AACrBZ,IAAAA,KAAK,CAACa,WAAN,CAAkBb,KAAK,CAACG,IAAxB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,GAAG,EAAEH,KAAK,CAACc,IAA3C;AAAiD,UAAA,GAAG,EAAEd,KAAK,CAACe,IAA5D;AAAmE,UAAA,OAAO,EAAEH;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,sBAA+BZ,KAAK,CAACe;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAA8Bf,KAAK,CAACK,GAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvCQN,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\n//добавить пропс onCardLike для компонента Card и задать в него эту функцию. \r\n//Также добавьте в Card обработчик клика handleLikeClick и вызовите из него onCardLike с аргументом card — по аналогии с уже имеющимся обработчиком handleClick.\r\n//добавьте пропс onCardDelete и обработчик handleDeleteClick в Card\r\n//После запроса в API, обновите стейт cards с помощью метода filter: создайте копию массива, исключив из него удалённую карточку.\r\n\r\nfunction Card(props) {\r\n  //Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n  \r\n  // Определяем, являемся ли мы владельцем текущей карточки (должна ли в текущей карточке показываться иконка удаления)\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id); \r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `element__like ${isLiked ? 'element__like_active' : ''}`\r\n  );\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  } \r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"element-template\">\r\n        <div className=\"element\" key={props._id}>\r\n          <button type=\"button\" className=\"element__delete\" />\r\n          <img className=\"element__image\" src={props.link} alt={props.name}  onClick={handleClick}/>\r\n          <div className=\"element__title\">\r\n            <h2 className=\"element__name\">{props.name}</h2>\r\n            <div className=\"element__like-container\">\r\n              <button type=\"button\" className=\"element__like\" />\r\n              <span className=\"element__like-count\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Card;"]},"metadata":{},"sourceType":"module"}