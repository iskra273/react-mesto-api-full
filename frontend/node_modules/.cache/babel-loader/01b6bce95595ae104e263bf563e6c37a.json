{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); // Стейты для карточек\n\n  const [isSelectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]); // Стейт для данных пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({\n    name: 'testName',\n    about: 'testDescription',\n    avatar: 'tesrAvatar'\n  }); //Создать обработчик handleUpdateUser. Внутри этого обработчика вызовите api.getProfile\n  //добавьте handleUpdateAvatar, вызывающий api.setUserAvatar\n\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function handleUpdateUser(data) {\n    api.updateUserInfo(data).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  } //Функция постановки лайков\n\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } //Функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Открытие попапа редактирования аватара\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // Открытие попапа редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } // Открытие попапа добавления места\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } // Закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  } // Обработчик клика по изображению\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: isSelectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WauFuZkyLFzCJq1bv9PaGI67KfE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","useContext","Header","Main","Footer","PopupWithForm","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","Card","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isSelectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","name","about","avatar","Promise","all","api","getProfile","getInitialCards","then","user","catch","err","console","error","handleUpdateUser","data","updateUserInfo","newUser","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateAvatar","handleAddPlace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect, useContext} from 'react';\nimport '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport Card from './Card';\n\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  \n  // Стейты для карточек\n  const [isSelectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n\n // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = React.useState({\n    name: 'testName',\n    about: 'testDescription',\n    avatar: 'tesrAvatar'\n  });\n\n  //Создать обработчик handleUpdateUser. Внутри этого обработчика вызовите api.getProfile\n  //добавьте handleUpdateAvatar, вызывающий api.setUserAvatar\n  \n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()])\n    .then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }, []);\n\n  function handleUpdateUser(data) {\n    api.updateUserInfo(data)\n    .then((newUser) => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  //Функция постановки лайков\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((item) => item !== card))\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n  }\n\n  \n  // Открытие попапа редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  // Открытие попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  // Открытие попапа добавления места\n  function  handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  \n  // Закрытие попапа\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  // Обработчик клика по изображению\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"content\">\n            <Header />\n            <Main \n              onEditAvatar={handleEditAvatarClick} \n              onEditProfile={handleEditProfileClick} \n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n            <Footer />\n            \n            <EditProfilePopup \n              isOpen={isEditProfilePopupOpen} \n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <EditAvatarPopup \n              isOpen={isEditAvatarPopupOpen} \n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n            <AddPlacePopup \n              isOpen={isAddPlacePopupOpen} \n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlace}\n            />\n            <ImagePopup\n              card={isSelectedCard}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </div>\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}