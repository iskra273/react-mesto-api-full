{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; //После запроса в API, обновите стейт cards с помощью метода filter: создайте копию массива, исключив из него удалённую карточку.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : ''}`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-template\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cardDeleteButtonClassName,\n          onClick: handleDeleteClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"element__image\",\n          src: card.link,\n          alt: card.name,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"element__name\",\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"element__like-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: cardLikeButtonClassName,\n              onClick: handleLikeClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"element__like-count\",\n              children: card.likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/Card.js"],"names":["React","useState","useEffect","useContext","CurrentUserContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleLikeClick","handleDeleteClick","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAASC,kBAAT,QAAmC,gCAAnC,C,CAGA;;;;AAEA,SAASC,IAAT,OAA+D;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,GAAiD;AAC7D,QAAMC,WAAW,GAAGP,UAAU,CAACC,kBAAD,CAA9B,CAD6D,CAG7D;;AACA,QAAMO,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAWC,GAAX,KAAmBH,WAAW,CAACG,GAA7C;AACA,QAAMC,yBAAyB,GAC5B,mBAAkBH,KAAK,GAAG,yBAAH,GAA+B,wBAAyB,EADlF,CAL6D,CAS7D;;AACA,QAAMI,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUH,WAAW,CAACG,GAA3C,CAAhB;AACA,QAAMM,uBAAuB,GAC1B,iBAAgBJ,OAAO,GAAG,sBAAH,GAA4B,EAAG,EADzD;;AAIA,WAASK,WAAT,GAAuB;AACrBb,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD;;AAED,WAASe,eAAT,GAA2B;AACzBb,IAAAA,UAAU,CAACF,IAAD,CAAV;AACD;;AAED,WAASgB,iBAAT,GAA6B;AAC3Bb,IAAAA,YAAY,CAACH,IAAD,CAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEQ,yBAAjC;AAA4D,UAAA,OAAO,EAAEQ;AAArE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,GAAG,EAAEhB,IAAI,CAACiB,IAA1C;AAAgD,UAAA,GAAG,EAAEjB,IAAI,CAACkB,IAA1D;AAAiE,UAAA,OAAO,EAAEJ;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,sBAA+Bd,IAAI,CAACkB;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAEL,uBAAjC;AAA0D,cAAA,OAAO,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA,wBAAuCf,IAAI,CAACU,KAAL,CAAWS;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7CQpB,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\n//После запроса в API, обновите стейт cards с помощью метода filter: создайте копию массива, исключив из него удалённую карточку.\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  \r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id); \r\n  const cardLikeButtonClassName = (\r\n    `element__like ${isLiked ? 'element__like_active' : ''}`\r\n  );\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  } \r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card)\r\n  }\r\n  \r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  } \r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"element-template\">\r\n        <div className=\"element\">\r\n          <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}/>\r\n          <img className=\"element__image\" src={card.link} alt={card.name}  onClick={handleClick}/>\r\n          <div className=\"element__title\">\r\n            <h2 className=\"element__name\">{card.name}</h2>\r\n            <div className=\"element__like-container\">\r\n              <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}/>\r\n              <span className=\"element__like-count\">{card.likes.length}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n  \r\nexport default Card;"]},"metadata":{},"sourceType":"module"}