{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); // Стейты для карточек\n\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]); // Стейт для данных пользователя\n\n  const [currentUser, setCurrentUser] = useState({}); // Стейт авторизации пользователя (true - вошел в систему)\n\n  const [loggedIn, setLoggedIn] = useState(false); // Стейт состояния открытия попапа при регистрациии\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false); // Стейт сообщения об успешной или нейспешной авторизации\n\n  const [message, setMessage] = useState(false); // Стейт отображения логина в хедере\n\n  const [userEmailHeader, setUserEmailHeader] = useState(''); //  const history = useHistory();\n\n  useEffect(() => {\n    api.getProfile().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(res => setCards(res)).catch(err => {\n      console.error(err);\n    });\n  }, []); // Проверка токена при первой загрузке\n\n  useEffect(() => {\n    checkToken();\n  }); // Открытие попапа редактирования аватара\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // Открытие попапа редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } // Открытие попапа добавления места\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } // Закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  } // Обработчик клика по изображению\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads(updatedCards) {\n    setCards(updatedCards);\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data.name, data.about).then(newProfile => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatar(data.avatar).then(avatar => {\n      setCurrentUser({ ...currentUser,\n        avatar\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  } //Функция постановки лайков\n\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    function handleLikeStatus(newCard) {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }\n\n    if (!isLiked) {\n      api.addLike(card._id).then(handleLikeStatus).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.deleteLike(card._id).then(handleLikeStatus).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function onRegister(email, password) {}\n\n  function onLogin(email, password) {}\n\n  function checkToken() {}\n\n  function onSignOut() {}\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onCardClick: handleCardClick,\n                onSetCards: handleSetCads,\n                onCardLike: handleCardLike,\n                onCardDelete: handleCardDelete,\n                cards: cards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(Register, {\n                onRegister: onRegister\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signin\",\n              children: /*#__PURE__*/_jsxDEV(Login, {\n                onLogin: onLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: isSelectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OeFmHWf5pHUfW7b5dqVCwpOj25s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","useContext","Route","Switch","Redirect","CurrentUserContext","api","auth","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","Login","Register","InfoTooltip","ProtectedRoute","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isSelectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","loggedIn","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","message","setMessage","userEmailHeader","setUserEmailHeader","getProfile","then","data","catch","err","console","error","getInitialCards","res","checkToken","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleSetCads","updatedCards","handleUpdateUser","editProfile","name","about","newProfile","handleUpdateAvatar","updateAvatar","avatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","handleLikeStatus","newCards","map","c","addLike","deleteLike","handleCardDelete","deleteCard","filter","item","log","onRegister","email","password","onLogin","onSignOut"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect, useContext} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\n\n\n\nfunction App() {\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  \n  // Стейты для карточек\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n \n // Стейт авторизации пользователя (true - вошел в систему)\n const [loggedIn, setLoggedIn] = useState(false);\n\n // Стейт состояния открытия попапа при регистрациии\n const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n\n // Стейт сообщения об успешной или нейспешной авторизации\n const [message, setMessage] = useState(false);\n\n // Стейт отображения логина в хедере\n const [userEmailHeader, setUserEmailHeader] = useState('');\n \n//  const history = useHistory();\n\n  useEffect(() => {\n    api.getProfile()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n \n    api.getInitialCards()\n      .then((res) => setCards(res))\n      .catch((err) => {\n        console.error(err);\n      })\n\n  }, []);\n  \n  // Проверка токена при первой загрузке\n  useEffect(() => {\n    checkToken();\n  })\n\n  // Открытие попапа редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  // Открытие попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  // Открытие попапа добавления места\n  function  handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  \n  // Закрытие попапа\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  // Обработчик клика по изображению\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads (updatedCards) {\n    setCards(updatedCards)\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data.name, data.about)\n    .then((newProfile) => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatar(data.avatar)\n    .then((avatar) => {\n      setCurrentUser({ ...currentUser, avatar });\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link)\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  //Функция постановки лайков\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    function handleLikeStatus(newCard) {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }\n\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then(handleLikeStatus)\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      api.deleteLike(card._id)\n        .then(handleLikeStatus)\n        .catch((err) => {\n          console.error(err);\n        });\n    } \n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((item) => item._id !== card._id))\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n  }\n\n  function onRegister(email, password) {\n\n  }\n\n  function onLogin(email, password) {\n\n  }\n\n  function checkToken() {\n\n  }\n\n  function onSignOut() {\n\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"content\">\n            <Header />\n            <Switch>\n              {/* <ProtectedRoute>\n                \n                onEditAvatar={handleEditAvatarClick} \n                onEditProfile={handleEditProfileClick} \n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onSetCards={handleSetCads}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                cards={cards}\n                component={Main}\n                exact path=\"/\"\n                loggedIn={loggedIn} \n              </ProtectedRoute>\n              \n              <ProtectedRoute>\n                component={Footer}\n                exact path=\"/\"\n                loggedIn={loggedIn}               \n              </ProtectedRoute> */}\n\n              <Route exact path=\"/\">\n                <Main \n                  onEditAvatar={handleEditAvatarClick} \n                  onEditProfile={handleEditProfileClick} \n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  onSetCards={handleSetCads}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards} \n                />\n                <Footer />\n              </Route>\n              \n              <Route path=\"/signup\">\n                <Register\n                  onRegister={onRegister} />\n              </Route>\n              \n              <Route path=\"/signin\">\n                <Login\n                  onLogin={onLogin} />\n              </Route>\n            </Switch> \n            \n            {/* <Route>\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\"/>}\n            </Route> */}\n            \n            {/* <InfoTooltip>\n              isOpen={isInfoTooltipOpen}\n              onClose={closeAllPopups}\n              status={message}\n            </InfoTooltip> */}\n\n            <EditProfilePopup \n              isOpen={isEditProfilePopupOpen} \n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n\n            <EditAvatarPopup \n              isOpen={isEditAvatarPopupOpen} \n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup \n              isOpen={isAddPlacePopupOpen} \n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup\n              card={isSelectedCard}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </div>\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}