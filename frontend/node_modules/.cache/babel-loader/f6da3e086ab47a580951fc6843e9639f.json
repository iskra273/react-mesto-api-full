{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); // Стейты для карточек\n\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]); // Стейт для данных пользователя\n\n  const [currentUser, setCurrentUser] = useState({\n    name: 'testName',\n    about: 'testDescription',\n    avatar: 'testAvatar'\n  });\n  useEffect(() => {\n    api.getProfile().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(res => setCards(res)).catch(err => {\n      console.error(err);\n    });\n  }, []); // Открытие попапа редактирования аватара\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // Открытие попапа редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } // Открытие попапа добавления места\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } // Закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  } // Обработчик клика по изображению\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads(updatedCards) {\n    setCards(updatedCards);\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data).then(newProfile => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  } //Функция постановки лайков\n\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } //Функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref) {\n    let {\n      name,\n      link\n    } = _ref;\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onSetCards: handleSetCads,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser // onSubmit={handleUpdateUser}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar // onSubmit={handleUpdateAvatar}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit // onSubmit={handleAddPlaceSubmit}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: isSelectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jrEwU6fFDjC1n7LOaOxuTNbGoug=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","useContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isSelectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","name","about","avatar","getProfile","then","data","catch","err","console","error","getInitialCards","res","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleSetCads","updatedCards","handleUpdateUser","editProfile","newProfile","handleUpdateAvatar","updateAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","log","handleAddPlaceSubmit","link","addCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect, useContext} from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n  // Стейты для попапов (принимает состояние открыт(true), закрыт (False))\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  \n  // Стейты для карточек\n  const [isSelectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({\n    name: 'testName',\n    about: 'testDescription',\n    avatar: 'testAvatar'\n  });\n\n  \n  useEffect(() => {\n    api.getProfile()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n \n    api.getInitialCards()\n      .then((res) => setCards(res))\n      .catch((err) => {\n        console.error(err);\n      })\n\n  }, []);\n\n  // Открытие попапа редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  // Открытие попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  // Открытие попапа добавления места\n  function  handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  \n  // Закрытие попапа\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  // Обработчик клика по изображению\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleSetCads (updatedCards) {\n    setCards(updatedCards)\n  }\n\n  function handleUpdateUser(data) {\n    api.editProfile(data)\n    .then((newProfile) => {\n      setCurrentUser(newProfile);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar)\n    .then(() => {\n      setCurrentUser({ ...currentUser, avatar });\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  //Функция постановки лайков\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((item) => item !== card))\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n  }\n\n  function handleAddPlaceSubmit({name, link}) {\n    api.addCard({name, link})\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"content\">\n            <Header />\n            <Main \n              onEditAvatar={handleEditAvatarClick} \n              onEditProfile={handleEditProfileClick} \n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onSetCards={handleSetCads}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n            />\n            <Footer />\n            \n            <EditProfilePopup \n              isOpen={isEditProfilePopupOpen} \n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              // onSubmit={handleUpdateUser}\n            />\n\n            <EditAvatarPopup \n              isOpen={isEditAvatarPopupOpen} \n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              // onSubmit={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup \n              isOpen={isAddPlacePopupOpen} \n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n              // onSubmit={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup\n              card={isSelectedCard}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </div>\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}