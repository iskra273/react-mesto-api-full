{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n  useEffect(() => {\n    api.getProfile().then(res => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(res => setCards(res)).catch(err => {\n      console.error(err);\n    });\n  }, []); // const[userInfo, setUserInfo] = React.useState({})\n  // const[cards, setCards] =  React.useState([]);\n  // useEffect(() => {\n  //   Promise.all([api.getProfile(), api.getInitialCards()])\n  //   .then(([userData, card]) => {\n  //     setUserInfo(userData)\n  //     setCards(card)\n  //   })\n  // },  [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar-edit\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n            className: \"profile__avatar-foto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__avatar-foto-edit\",\n            onClick: onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__info-title\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__info-subtitle\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__add\",\n          onClick: onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          link: card.link,\n          name: card.name,\n          likes: card.likes.length,\n          onCardClick: onCardClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"ezIPAwa2X54VuFEPMPK//N4rwdU=\");\n\n_c = Main;\nexport default Main; //Только в компоненте Main будут происходить запросы к апи\n//Тут вам понадобятся 4 стейта (3 для полей пользователя и один для карточек) \n//и хук useEffect, чтобы загружать данные при открытии страницы\n//внимание уделите зависимостям хука — чтобы он выполнялся ровно один раз \n//разве что надо будет еще аккуратно отрендерить массив карточек и не забыть про key.\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/Main.js"],"names":["React","api","useState","useEffect","Card","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","getProfile","then","res","name","about","avatar","catch","err","console","error","getInitialCards","map","card","link","likes","length","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport api from '../utils/api';\r\nimport {useState, useEffect} from 'react';\r\nimport Card from './Card';\r\n\r\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick}) {\r\n  \r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setCards] =  React.useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getProfile()\r\n      .then((res) => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      })\r\n \r\n    api.getInitialCards()\r\n      .then((res) => setCards(res))\r\n      .catch((err) => {\r\n        console.error(err);\r\n      })\r\n\r\n  }, [])\r\n\r\n\r\n  // const[userInfo, setUserInfo] = React.useState({})\r\n  // const[cards, setCards] =  React.useState([]);\r\n  // useEffect(() => {\r\n  //   Promise.all([api.getProfile(), api.getInitialCards()])\r\n  //   .then(([userData, card]) => {\r\n  //     setUserInfo(userData)\r\n  //     setCards(card)\r\n  //   })\r\n    \r\n  // },  [])\r\n\r\n  \r\n\r\n    return (\r\n    <div className=\"Main\">\r\n      <main>\r\n          <section className=\"profile\">\r\n            <div className=\"profile__avatar-edit\">\r\n              <img\r\n                src={userAvatar}\r\n                alt=\"Фото профиля\"\r\n                className=\"profile__avatar-foto\"\r\n              />\r\n              <button className=\"profile__avatar-foto-edit\" onClick={onEditAvatar} />\r\n            </div>\r\n            <div className=\"profile__info\">\r\n              <div className=\"profile__title\">\r\n                <h1 className=\"profile__info-title\">{userName}</h1>\r\n                <button type=\"button\" className=\"profile__edit\" onClick={onEditProfile}/>\r\n              </div>\r\n              <p className=\"profile__info-subtitle\">{userDescription}</p>\r\n            </div>\r\n            <button type=\"button\" className=\"profile__add\" onClick={onAddPlace}></button>\r\n          </section>\r\n          \r\n          <section className=\"elements\" >\r\n            {\r\n              cards.map(card => (\r\n                <Card\r\n                  card={card}\r\n                  key={card._id}\r\n                  link={card.link}\r\n                  name={card.name}\r\n                  likes={card.likes.length}\r\n                  onCardClick={onCardClick}\r\n                />\r\n              ))\r\n            }\r\n          </section>\r\n        </main>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Main;\r\n\r\n//Только в компоненте Main будут происходить запросы к апи\r\n//Тут вам понадобятся 4 стейта (3 для полей пользователя и один для карточек) \r\n//и хук useEffect, чтобы загружать данные при открытии страницы\r\n//внимание уделите зависимостям хука — чтобы он выполнялся ровно один раз \r\n//разве что надо будет еще аккуратно отрендерить массив карточек и не забыть про key."]},"metadata":{},"sourceType":"module"}