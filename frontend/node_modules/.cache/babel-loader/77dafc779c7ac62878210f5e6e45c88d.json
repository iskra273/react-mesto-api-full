{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const [name, setName] = useState('');\n  const [link, setLink] = useState(''); // // Обработчик установки названия места\n  // function handleNameChange(evt) {\n  //   setName(evt.target.value);\n  // }\n  // Обработчик установки ссылки на картинку\n\n  function handleLinkChange(evt) {\n    setLink(evt.target.value);\n  } // Обработчик сабмита формы добавления карточки\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({\n      name: name,\n      link: link\n    });\n  }\n\n  useEffect(() => {\n    if (isOpen) {\n      setName('');\n      setLink('');\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddPlacePopup\",\n    children: /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"add-element\",\n      title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n      buttonText: 'Создать',\n      isOpen: isOpen,\n      onClose: onClose,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name-input\",\n        type: \"text\",\n        name: \"name\",\n        required: \"\",\n        minLength: 2,\n        maxLength: 30,\n        className: \"popup__input popup__input_name_add-name\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\" // defaultValue=\"\"\n        // onChange={handleNameChange}\n        ,\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-name-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"link-input\",\n        type: \"url\",\n        minLength: 1,\n        name: \"link\",\n        required: \"\",\n        className: \"popup__input popup__input_name_add-link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\" // defaultValue=\"\"\n        ,\n        onChange: handleLinkChange,\n        value: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-link-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"4v59feAPT9go87//yRNdkEAP6r8=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/AddPlacePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","AddPlacePopup","isOpen","onClose","onAddPlace","name","setName","link","setLink","handleLinkChange","evt","target","value","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,OAAsD;AAAA;;AAAA,MAA/B;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAA+B;AACpD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC,CAFoD,CAIpD;AACA;AACA;AACA;AAEA;;AACA,WAASY,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BF,IAAAA,OAAO,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD,GAZmD,CAcpD;;;AACA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,UAAU,CAAC;AACTC,MAAAA,IAAI,EAAEA,IADG;AAETE,MAAAA,IAAI,EAAEA;AAFG,KAAD,CAAV;AAID;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,MAAJ,EAAY;AACVI,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GALQ,EAKN,CAACN,MAAD,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAC,+DAFR;AAGE,MAAA,UAAU,EAAE,SAHd;AAIE,MAAA,MAAM,EAAEA,MAJV;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,QAAQ,EAAEU,YANZ;AAAA,8BAQE;AACI,QAAA,EAAE,EAAC,YADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAC,EAJb;AAKI,QAAA,SAAS,EAAE,CALf;AAMI,QAAA,SAAS,EAAE,EANf;AAOI,QAAA,SAAS,EAAC,yCAPd;AAQI,QAAA,WAAW,EAAC,kDARhB,CASI;AACA;AAVJ;AAWI,QAAA,QAAQ,EAAGC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACH,MAAF,CAASC,KAAV,CAX5B;AAYI,QAAA,KAAK,EAAEP;AAZX;AAAA;AAAA;AAAA;AAAA,cARF,eAsBI;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA0BI;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,SAAS,EAAE,CAHb;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAC,EALX;AAME,QAAA,SAAS,EAAC,yCANZ;AAOE,QAAA,WAAW,EAAC,oGAPd,CAQE;AARF;AASE,QAAA,QAAQ,EAAEI,gBATZ;AAUE,QAAA,KAAK,EAAEF;AAVT;AAAA;AAAA;AAAA;AAAA,cA1BJ,eAsCI;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GA7EQN,a;;KAAAA,a;AA+ET,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  // // Обработчик установки названия места\r\n  // function handleNameChange(evt) {\r\n  //   setName(evt.target.value);\r\n  // }\r\n\r\n  // Обработчик установки ссылки на картинку\r\n  function handleLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  // Обработчик сабмита формы добавления карточки\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({\r\n      name: name, \r\n      link: link\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setName('');\r\n      setLink('')\r\n    }\r\n  }, [isOpen]); \r\n \r\n  return (\r\n    <div className=\"AddPlacePopup\">\r\n      <PopupWithForm\r\n        name='add-element'\r\n        title='Новое место'\r\n        buttonText={'Создать'}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n            id=\"name-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            required=\"\"\r\n            minLength={2}\r\n            maxLength={30}\r\n            className=\"popup__input popup__input_name_add-name\"\r\n            placeholder=\"Название\"\r\n            // defaultValue=\"\"\r\n            // onChange={handleNameChange}\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n          <span\r\n            id=\"error-name-input\"\r\n            className=\"popup__error popup__error_visible\"\r\n          />\r\n          <input\r\n            id=\"link-input\"\r\n            type=\"url\"\r\n            minLength={1}\r\n            name=\"link\"\r\n            required=\"\"\r\n            className=\"popup__input popup__input_name_add-link\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            // defaultValue=\"\"\r\n            onChange={handleLinkChange}\r\n            value={link}\r\n          />\r\n          <span\r\n            id=\"error-link-input\"\r\n            className=\"popup__error popup__error_visible\"\r\n          />\r\n      </PopupWithForm>\r\n    </div>  \r\n  );\r\n}\r\n    \r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}