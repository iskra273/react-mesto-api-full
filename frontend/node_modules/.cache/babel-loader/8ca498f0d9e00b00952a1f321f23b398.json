{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext); // Стейты имени и описания пользователя\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState(''); // После загрузки текущего пользователя из API, его данные будут использованы в управляемых компонентах.\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [isOpen, currentUser]); // Изменение имени\n\n  const handleNameChange = evt => {\n    setName(evt.target.value);\n  }; // Изменение описания\n\n\n  const handleDescriptionChange = evt => {\n    setDescription(evt.target.value);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EditProfilePopup\",\n    children: /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: 'edit',\n      title: 'Редактировать профиль',\n      buttonText: 'Сохранить',\n      isOpen: isOpen,\n      onClose: onClose,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title-input\",\n        type: \"text\",\n        name: \"title\",\n        required: \"\",\n        minLength: 2,\n        maxLength: 40,\n        className: \"popup__input popup__input_name_title\",\n        placeholder: \"\\u0418\\u043C\\u044F\" // defaultValue=\"\"\n        ,\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-title-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"subtitle-input\",\n        type: \"text\",\n        name: \"subtitle\",\n        required: \"\",\n        minLength: 2,\n        maxLength: 200,\n        className: \"popup__input popup__input_name_subtitle\",\n        placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\" // defaultValue=\"\"\n        ,\n        value: description,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-subtitle-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","currentUser","name","setName","description","setDescription","about","handleNameChange","evt","target","value","handleDescriptionChange","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Стейты имени и описания пользователя\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // После загрузки текущего пользователя из API, его данные будут использованы в управляемых компонентах.\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [isOpen, currentUser]); \r\n\r\n  // Изменение имени\r\n  const handleNameChange = (evt) => {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  // Изменение описания\r\n  const handleDescriptionChange = (evt) => {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"EditProfilePopup\">\r\n      <PopupWithForm\r\n        name={'edit'}\r\n        title={'Редактировать профиль'}\r\n        buttonText={'Сохранить'}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n            id=\"title-input\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            required=\"\"\r\n            minLength={2}\r\n            maxLength={40}\r\n            className=\"popup__input popup__input_name_title\"\r\n            placeholder=\"Имя\"\r\n            // defaultValue=\"\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n          />\r\n          <span\r\n            id=\"error-title-input\"\r\n            className=\"popup__error popup__error_visible\"\r\n          />\r\n          <input\r\n            id=\"subtitle-input\"\r\n            type=\"text\"\r\n            name=\"subtitle\"\r\n            required=\"\"\r\n            minLength={2}\r\n            maxLength={200}\r\n            className=\"popup__input popup__input_name_subtitle\"\r\n            placeholder=\"Профессиональная деятельность\"\r\n            // defaultValue=\"\"\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n          />\r\n          <span\r\n            id=\"error-subtitle-input\"\r\n            className=\"popup__error popup__error_visible\"\r\n          />            \r\n      </PopupWithForm>\r\n    </div>  \r\n  );\r\n}\r\n    \r\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}