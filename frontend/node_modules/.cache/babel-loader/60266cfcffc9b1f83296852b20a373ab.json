{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kraskova\\\\dev\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onSubmit,\n    onCloseClick,\n    onUpdateUser\n  } = _ref;\n  //Подписка на контекст\n  const currentUser = useContext(CurrentUserContext); // Стейт-переменные имени и описания пользователя\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); // После загрузки текущего пользователя из API,его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EditProfilePopup\",\n    children: /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: 'edit',\n      title: 'Редактировать профиль',\n      buttonText: 'Сохранить',\n      isOpen: isOpen,\n      onClose: onClose,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title-input\",\n        type: \"text\",\n        name: \"title\",\n        required: \"\",\n        minLength: 2,\n        maxLength: 40,\n        className: \"popup__input popup__input_name_title\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-title-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"subtitle-input\",\n        type: \"text\",\n        name: \"subtitle\",\n        required: \"\",\n        minLength: 2,\n        maxLength: 200,\n        className: \"popup__input popup__input_name_subtitle\",\n        placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\",\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error-subtitle-input\",\n        className: \"popup__error popup__error_visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["C:/Users/kraskova/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onSubmit","onCloseClick","onUpdateUser","currentUser","name","setName","description","setDescription","about","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAkC,gCAAlC;;;AAEA,SAASC,gBAAT,OAAqF;AAAA;;AAAA,MAA3D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,GAA2D;AACnF;AACA,QAAMC,WAAW,GAAGT,UAAU,CAACE,kBAAD,CAA9B,CAFmF,CAInF;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgChB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC,CANmF,CAQnF;;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBY,IAAAA,OAAO,CAACF,WAAW,CAACC,IAAb,CAAP;AACAG,IAAAA,cAAc,CAACJ,WAAW,CAACK,KAAb,CAAd;AACD,GAHD,EAGG,CAACL,WAAD,CAHH;;AAMA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFuB,CAIvB;;AACAT,IAAAA,YAAY,CAAC;AACXE,MAAAA,IADW;AAEXI,MAAAA,KAAK,EAAEF;AAFI,KAAD,CAAZ;AAID;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,KAAK,EAAE,uBAFT;AAGE,MAAA,UAAU,EAAE,WAHd;AAIE,MAAA,MAAM,EAAER,MAJV;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,QAAQ,EAAEU,YANZ;AAAA,8BAQE;AACI,QAAA,EAAE,EAAC,aADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,QAAQ,EAAC,EAJb;AAKI,QAAA,SAAS,EAAE,CALf;AAMI,QAAA,SAAS,EAAE,EANf;AAOI,QAAA,SAAS,EAAC,sCAPd;AAQI,QAAA,WAAW,EAAC,oBARhB;AASI,QAAA,YAAY,EAAC;AATjB;AAAA;AAAA;AAAA;AAAA,cARF,eAmBI;AACE,QAAA,EAAE,EAAC,mBADL;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAuBI;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAC,EAJX;AAKE,QAAA,SAAS,EAAE,CALb;AAME,QAAA,SAAS,EAAE,GANb;AAOE,QAAA,SAAS,EAAC,yCAPZ;AAQE,QAAA,WAAW,EAAC,2KARd;AASE,QAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAkCI;AACE,QAAA,EAAE,EAAC,sBADL;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CC;;GArEMZ,gB;;KAAAA,gB;AAuET,eAAeA,gBAAf","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onSubmit, onCloseClick, onUpdateUser }) {\r\n  //Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Стейт-переменные имени и описания пользователя\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  // После загрузки текущего пользователя из API,его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]); \r\n\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n  \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n  \r\n  return (\r\n      <div className=\"EditProfilePopup\">\r\n        <PopupWithForm\r\n          name={'edit'}\r\n          title={'Редактировать профиль'}\r\n          buttonText={'Сохранить'}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <input\r\n              id=\"title-input\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              required=\"\"\r\n              minLength={2}\r\n              maxLength={40}\r\n              className=\"popup__input popup__input_name_title\"\r\n              placeholder=\"Имя\"\r\n              defaultValue=\"\"\r\n            />\r\n            <span\r\n              id=\"error-title-input\"\r\n              className=\"popup__error popup__error_visible\"\r\n            />\r\n            <input\r\n              id=\"subtitle-input\"\r\n              type=\"text\"\r\n              name=\"subtitle\"\r\n              required=\"\"\r\n              minLength={2}\r\n              maxLength={200}\r\n              className=\"popup__input popup__input_name_subtitle\"\r\n              placeholder=\"Профессиональная деятельность\"\r\n              defaultValue=\"\"\r\n            />\r\n            <span\r\n              id=\"error-subtitle-input\"\r\n              className=\"popup__error popup__error_visible\"\r\n            />      \r\n        </PopupWithForm>\r\n      </div>  \r\n    );\r\n  }\r\n    \r\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}